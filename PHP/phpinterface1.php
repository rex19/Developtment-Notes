
 <?php
/**
php与大多数面向对象编程语言一样，不支持多重继承，也就是说每个类只能继承一个父类。为了解决这个问题PHP引入了接口，接口的思想是指定了一个实现了该接口的类必须实现的一系列函数。

定义格式：interface 接口名称{
    //常量成员(使用const关键字定义)
    //抽象方法(不需要使用abstract关键字)
}

使用格式：class implements 接口1，接口2{.....}

区别:当你关注一个事物本质的时候，用抽象类，当你关注一个操作的时候，用接口


对象的多态性:是指在父类中定义的属性或行为被子类继承之后，可以具有不同的数据类型或表现出不同的行为。这使得同一个属性或行为在父类及其各个子类中具有不同的语义
 */ 


 //1,含有抽象方法的类 必须是抽象类
//  2,抽象类不一定非得含有抽象方法
// 3,抽象类可以存在普通方法，
// 4，抽象类不能被实例化，必须由一个子类去继承，并且把抽象类的抽象方法都实现了
abstract class Person{

    public abstract function eat(); //抽象方法没有方法体
}

class Man extends Person{

    public  function eat(){
        echo 'man-eat';
    }
}

$man = new Man();
$man->eat();

 ?>